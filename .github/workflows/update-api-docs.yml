name: Update API Documentation

on:
  workflow_dispatch:  # Allow manual triggers for now
  # Later we can add:
  # push:
  #   paths:
  #     - 'api/v1alpha1/**'
  #   branches:
  #     - main

jobs:
  generate-api-docs:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write
    
    steps:
      - name: Checkout kgateway repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/kgateway
          path: kgateway

      - name: Checkout docs repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/kgateway.dev
          path: kgateway.dev

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24'
          cache: false

      - name: Set kgateway commit SHA
        run: echo "KGATEWAY_COMMIT=$(cd kgateway && git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Read max Kubernetes version
        run: |
          KUBE_VERSION=$(cat kgateway.dev/assets/docs/versions/max-kube.md | tr -d '\n')
          echo "KUBE_VERSION=$KUBE_VERSION" >> $GITHUB_ENV

      - name: Generate API Reference
        run: |
          echo "=== Debug: Starting Generate API Reference ==="
          echo "Current directory: $PWD"
          echo "GITHUB_WORKSPACE: $GITHUB_WORKSPACE"
          echo "Listing GITHUB_WORKSPACE contents:"
          ls -la $GITHUB_WORKSPACE

          echo "=== Debug: Before generating docs ==="
          echo "Looking for API directory:"
          ls -la "$GITHUB_WORKSPACE/kgateway/api/v1alpha1/" || echo "API directory not found!"
          ls -la "$GITHUB_WORKSPACE/kgateway.dev/content/docs/reference/api/" || echo "Docs API directory not found!"
          # Update docs repository
          cd "$GITHUB_WORKSPACE/kgateway.dev"
          echo "Changed to docs repository: $PWD"
          
          # Generate docs with frontmatter
          go run github.com/elastic/crd-ref-docs@v0.1.0 \
            --source-path="$GITHUB_WORKSPACE/kgateway/api/v1alpha1/" \
            --renderer=markdown \
            --output-path ./ \
            --config=<(cat <<EOF
processor:
  ignoreTypes:
    - ".*List$"
render:
  kubernetesVersion: ${KUBE_VERSION}
  knownTypes:
    - name: Quantity
      package: k8s.io/apimachinery/pkg/api/resource
      link: https://kubernetes.io/docs/reference/generated/kubernetes-api/v${KUBE_VERSION}/#quantity-resource-core
    - name: Duration
      package: k8s.io/apimachinery/pkg/apis/meta/v1
      link: https://kubernetes.io/docs/reference/generated/kubernetes-api/v${KUBE_VERSION}/#duration-v1-meta
    - name: Time
      package: k8s.io/apimachinery/pkg/apis/meta/v1
      link: https://kubernetes.io/docs/reference/generated/kubernetes-api/v${KUBE_VERSION}/#time-v1-meta
    - name: ObjectMeta
      package: k8s.io/apimachinery/pkg/apis/meta/v1
      link: https://kubernetes.io/docs/reference/generated/kubernetes-api/v${KUBE_VERSION}/#objectmeta-v1-meta
    - name: LabelSelector
      package: k8s.io/apimachinery/pkg/apis/meta/v1
      link: https://kubernetes.io/docs/reference/generated/kubernetes-api/v${KUBE_VERSION}/#labelselector-v1-meta
    - name: ListMeta
      package: k8s.io/apimachinery/pkg/apis/meta/v1
      link: https://kubernetes.io/docs/reference/generated/kubernetes-api/v${KUBE_VERSION}/#listmeta-v1-meta
    - name: TypeMeta
      package: k8s.io/apimachinery/pkg/apis/meta/v1
      link: https://kubernetes.io/docs/reference/generated/kubernetes-api/v${KUBE_VERSION}/#typemeta-v1-meta
EOF
)
                  
          # Create index file with frontmatter
          (echo '---
          title: API reference
          weight: 10
          ---
          
          '; cat "./out.md" ) > content/docs/reference/api.md

          # Remove temporary file
          rm -f "./out.md"

          # Format generated docs
          sed -i 's/Required: \\{\\}/Required/g; s/Optional: \\{\\}/Optional/g' content/docs/reference/api.md
          # Fix formatting issues in the markdown
          sed -i '
          /```yaml<br \/>/ {
            s/```yaml<br \/>//
            s/<br \/>$//
            /^$/d
            s/stats:<br \/>/stats:<br \/>/
            s/  customLabels:<br \/>/\&nbsp;\&nbsp;customLabels:<br \/>/
            s/    - name:/\&nbsp;\&nbsp;\&nbsp;\&nbsp;- name:/g
            s/      metadataNamespace:/\&nbsp;\&nbsp;\&nbsp;\&nbsp;\&nbsp;\&nbsp;metadataNamespace:/g
            s/      metadataKey:/\&nbsp;\&nbsp;\&nbsp;\&nbsp;\&nbsp;\&nbsp;metadataKey:/g
            s/```//
            /^\s*$/d
          }' content/docs/reference/api.md
          sed -i '/```yaml/,/```/{ /^```/! { s/\t/  /g; /^\s*$/d } }' content/docs/reference/api.md
          sed -i '/^# API Reference$/,/^$/d' content/docs/reference/api.md

      - name: Generate Helm Chart Reference
        run: |
            echo "Looking for Helm directory:"
            ls -la "$GITHUB_WORKSPACE/kgateway/install/helm/kgateway" || echo "Helm directory not found!"
  
            # Update docs repository
            cd "$GITHUB_WORKSPACE/kgateway.dev"
            echo "Changed to docs repository: $PWD"

            # Create directory for Helm docs
            mkdir -p content/docs/reference/helm/
            
            # Generate Helm Docs with helm-docs
            for chart in "kgateway:helm" "kgateway-crds:crds"; do
              IFS=: read -r dir file <<< "$chart"
              go run github.com/norwoodj/helm-docs/cmd/helm-docs@v1.14.2 \
                --chart-search-root "$GITHUB_WORKSPACE/kgateway/install/helm/$dir" \
                --dry-run > "content/docs/reference/helm/${file}.md"

              # Remove badge line and following empty line 
              # (might be replaced by helm docs template in the future)
              sed -i '/!\[Version:/,/^$/d' "content/docs/reference/helm/${file}.md"

              # Remove backticks from the Default column in the table
              sed -i 's/| `\([^`]*\)` |/| \1 |/g' "content/docs/reference/helm/${file}.md"
            done

            echo "=== Debug: After creating index file ==="
            echo "Content directory structure:"
            ls -la content/docs/reference/helm/

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          path: kgateway.dev
          commit-message: "docs: Update API and Helm docs"
          signoff: true
          title: "Update API and Helm docs"
          body: |
            Automated API and Helm documentation update based on the latest commit [`${{ env.KGATEWAY_COMMIT }}`](https://github.com/${{ github.repository_owner }}/kgateway/commit/${{ env.KGATEWAY_COMMIT }}) to `main` in the **kgateway** repository.
            
            This PR was automatically generated by the [**Update API documentation** workflow](https://github.com/kgateway-dev/kgateway.dev/actions/workflows/update-api-docs.yml).
          branch: api-gen-update
          branch-suffix: timestamp
          delete-branch: true
          base: main
          labels: |
            documentation
            automated pr